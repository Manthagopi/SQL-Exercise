-- 1. Write a query to display the names (first_name, last_name) using alias name â€œFirst Name", "Last Name"...?
SELECT 
    first_name AS 'First Name', last_name AS 'Last Name'
FROM
    hr.employees;
-- 2. Write a query to get unique department ID from employee table...?
SELECT DISTINCT
    (department_id)
FROM
    hr.employees;
-- 3.Write a query to get all employee details from the employee table order by first name, descending...?
SELECT 
    *
FROM
    hr.employees
ORDER BY first_name DESC;
-- 4.Write a query to get the names (first_name, last_name), salary, PF of all the employees (PF is calculated as 15% of salary)...?
SELECT 
    first_name, last_name, salary, salary * 0.15 AS PF
FROM
    hr.employees;
-- 5.Write a query to get the employee ID, names (first_name, last_name), salary in ascending order of salary...?
SELECT 
    employee_id, first_name, last_name, salary
FROM
    hr.employees
WHERE
    employee_id IS NOT NULL
ORDER BY salary;
-- 6.Write a query to get the total salaries payable to employees...?
SELECT 
    SUM(salary) AS 'Sum of Total Salaries'
FROM
    hr.employees;
-- 7.Write a query to get the maximum and minimum salary from employees table...?
SELECT 
    MAX(salary) AS 'Maximum Salary',
    MIN(salary) AS 'Minimum Salary'
FROM
    hr.employees;
-- 8.Write a query to get the average salary and number of employees in the employees table...?
SELECT 
    AVG(salary) AS 'Average Salary',
    COUNT(employee_id) AS 'Count of Employees'
FROM
    hr.employees;
-- 9.Write a query to get the number of employees working with the company...?
SELECT 
    COUNT(employee_id) AS 'number of employees working with the company'
FROM
    hr.employees;
-- 10.Write a query to get the number of jobs available in the employees table...?
SELECT 
    COUNT(DISTINCT job_id) AS 'number_of_jobs'
FROM
    hr.employees;
-- 11.Write a query get all first name from employees table in upper case...?
SELECT 
    UPPER(first_name) AS 'First_name in Upper case'
FROM
    hr.employees;
-- 12. Write a query to get the first 3 characters of first name from employees table...?
SELECT 
    SUBSTR(first_name, 1, 3) AS 'First 3 Char of name'
FROM
    hr.employees;
-- 13. Write a query to get first name from employees table after removing white spaces from both side...?
SELECT 
    RTRIM(LTRIM(first_name)) AS 'name without spaces'
FROM
    hr.employees;
-- 14.Write a query to get the length of the employee names (first_name, last_name) from employees table...?
SELECT 
    LENGTH(first_name) AS length_first_name,
    LENGTH(last_name) AS length_last_name
FROM
    hr.employees;
-- 15.Write a query to check if the first_name fields of the employees table contains numbers...?
SELECT 
    first_name AS employees_table_contains_numbers
FROM
    hr.employees
WHERE
    first_name REGEXP '[0-9]';
-- 16.Write a query to display the name (first_name, last_name) and salary for all employees whose salary is not in the range $10,000 through $15,000...?
SELECT 
    first_name, last_name, salary
FROM
    hr.employees
WHERE
    salary NOT BETWEEN 10000 AND 15000;
-- 17.Write a query to display the name (first_name, last_name) and department ID of all employees in departments 30 or 100 in ascending order...?
SELECT 
    first_name, last_name, department_id
FROM
    hr.employees
WHERE
    department_id IN (30 , 100)
ORDER BY department_id ASC;
-- 18.Write a query to display the name (first_name, last_name) and salary for all employees whose salary is not in the range $10,000 through $15,000 and are in department 30 or 100...?
SELECT 
    first_name, last_name, salary
FROM
    hr.employees
WHERE
    salary NOT BETWEEN 10000 AND 15000
        AND department_id IN (30 , 100);
-- 19.Write a query to display the name (first_name, last_name) and hire date for all employees who were hired in 1987....?
SELECT 
    *
FROM
    hr.employees
WHERE
    YEAR(hire_date) = '1987%';
-- 20.Write a query to display the first_name of all employees who have both "b" and "c" in their first name...?
SELECT 
    first_name AS 'first_name with b and c'
FROM
    hr.employees
WHERE
    first_name LIKE '%b%'
        AND first_name LIKE '%c%';
-- 21.. Write a query to display the last name, job, and salary for all employees whose job is that of a Programmer or a Shipping Clerk, and whose salary is not equal to $4,500, $10,000, or $15,000...?
SELECT 
    last_name, job_id, salary
FROM
    hr.employees
WHERE
    job_id IN ('SH_Clerk' , 'IT_PROG')
        AND salary NOT IN (4500 , 10000, 15000);
-- 22.Write a query to display the last name of employees whose names have exactly 6 characters...?
SELECT 
    last_name
FROM
    hr.employees
WHERE
    LENGTH(last_name) = 6;
-- 23.Write a query to display the last name of employees having 'e' as the third character...?
SELECT 
    last_name
FROM
    hr.employees
WHERE
    last_name LIKE '__e%';
-- 24.Write a query to get the job_id and related employee's id Partial output of the query :
SELECT 
    job_id, GROUP_CONCAT(employee_id, ' ') 'Employee ID'
FROM
    hr.employees
GROUP BY job_id;
-- 25.Write a query to update the portion of the phone_number in the employees table, within the phone number the substring '124' will be replaced by'999 ("for this you have to toggle off the SQL Editor --> safe Updates")
UPDATE hr.employees 
SET 
    phone_number = REPLACE(phone_number, '124', '999')
WHERE
    phone_number LIKE '%124%';
-- 26.Write a query to get the details of the employees where the length of the first name greater than or equal to 8
SELECT 
    *
FROM
    hr.employees
WHERE
    LENGTH(first_name) >= 8;
-- 27.Write a query to append '@example.com' to email field
UPDATE hr.employees 
SET 
    email = CONCAT(email, '@example.com');
SELECT 
    email
FROM
    hr.employees;
-- 28.Write a query to extract the last 4 character of phone numbers
SELECT 
    *, SUBSTR(phone_number, - 4)
FROM
    hr.employees;
-- 29.Write a query to get the last word of the street address
SELECT 
    SUBSTRING_INDEX(street_address, ' ', - 1) AS 'last_words in Street_address'
FROM
    hr.locations;
-- 30.Write a query to get the locations that have minimum street length
SELECT 
    *
FROM
    hr.locations
WHERE
    LENGTH(street_address) <= (SELECT 
            MIN(LENGTH(street_address))
        FROM
            hr.locations);
-- 31.Write a query to display the first word from those job titles which contains more than one words
SELECT 
    SUBSTRING_INDEX(job_title, ' ', 1) AS 'first_word in Street_address'
FROM
    hr.jobs;
-- 32.Write a query to display the length of first name for employees where last name contain character 'c' after 2nd position
SELECT 
    first_name,
    last_name,
    LENGTH(first_name) AS 'length of first name'
FROM
    hr.employees
WHERE
    INSTR(last_name, 'c') > 2;
-- 33.Write a query that displays the first name and the length of the first name for all employees whose name starts with the letters 'A', 'J' or 'M'. Give each column an appropriate label. Sort the results by the employees' first names
SELECT 
    first_name 'Name',
    LENGTH(first_name) 'length'
FROM
    hr.employees
WHERE
    first_name LIKE 'A%'
        OR first_name LIKE 'J%'
        OR first_name LIKE 'M%'
GROUP  BY first_name
ORDER BY first_name;
-- 34.Write a query to display the first name and salary for all employees. Format the salary to be 10 characters long, left-padded with the $ symbol. Label the column SALARY
SELECT 
    first_name, salary, LPAD(salary, 10, '$') 'salary in $'
FROM
    hr.employees; 
-- 35.Write a query to display the first eight characters of the employees' first names and indicates the amounts of their salaries with '$' sign. Each '$' sign signifies a thousand dollars. Sort the data in descending order of salary
SELECT 
    LEFT(first_name, 8) AS 'Name',
    REPEAT('$', FLOOR(salary / 1000)) '$ for thousands',
    salary
FROM
    hr.employees
ORDER BY salary DESC;
-- 36.Write a query to display the employees with their code, first name, last name and hire date who hired either on seventh day of any month or seventh month in any year
 SELECT 
    ifnull(employee_id,'0'), first_name, last_name, hire_date
FROM
    hr.employees
WHERE
    position('07' IN DATE_FORMAT(hire_date, '%d %m %y')) > 0;
